# Task 3: Web App Deployment to IIS

This task deploys the cloned web app to Internet Information Services (IIS) using a PowerShell script. The script configures IIS, creates a new website, and binds it to a specific port.

## Prerequisites

- IIS must be installed on the Windows Server. You can install it by running the following command:

   ```powershell
   Install-WindowsFeature -name Web-Server -IncludeManagementTools
   ```

## Script Overview

The script `DeployWebApp.ps1` deploys the web application by performing the following steps:

1. Stops any existing website on the specified port (if any).
2. Creates a new website on IIS with the provided site name and physical path.
3. Binds the website to the given port and IP address.

### Script: DeployWebApp.ps1

```powershell
# DeployWebApp.ps1
# Script to deploy the web application to IIS

# Define variables
# Set variables
$siteName = "Freelancerupdate"
$sitePath = "C:\inetpub\wwwroot\dist"
$repoPath = "C:\ProgramData\Jenkins\.jenkins\workspace\WebAppDeployment"  # Jenkins workspace where the repo will be cloned
$port = 8050
$hostHeader = ""

# Ensure IIS is installed
if (!(Get-WindowsFeature -Name Web-Server).Installed) {
    Install-WindowsFeature -Name Web-Server -IncludeManagementTools
}

# Create the directory if it doesn't exist
if (-Not (Test-Path $sitePath)) {
    New-Item -Path $sitePath -ItemType Directory
}

# Copy the cloned repository files to the IIS directory
Copy-Item -Path "$repoPath\*" -Destination $sitePath -Recurse -Force

# Check if the site already exists
if (-not (Get-Website -Name $siteName -ErrorAction SilentlyContinue)) {
    New-Website -Name $siteName -PhysicalPath $sitePath -Port $port -HostHeader $hostHeader
} else {
    # If the site exists, restart it to apply any changes
    Restart-WebAppPool -Name "$siteName"
    Write-Host "Website $siteName restarted and running on port 8050."
}

Write-Host "Deployment complete. Website is running at http://localhost:8050/"
```

## Usage Instructions

1. Ensure IIS is installed and running.
2. Clone the web app repository (if not done already) into the IIS web root directory (`C:\inetpub\wwwroot`).
3. Open PowerShell as Administrator.
4. Navigate to the directory where `DeployWebApp.ps1` is located.
5. Run the script:

   ```powershell
   ./DeployWebApp.ps1
   ```

6. The script will configure IIS and deploy the website. You can access the deployed web app at `http://localhost:8050` or by replacing `localhost` with the server's IP address if accessed remotely.

## Notes

- Ensure that the port (e.g., `8050`) you use for binding is open in the firewall settings to allow external access to the web app.
- The script can be modified to deploy to different physical paths or use different ports as needed.
